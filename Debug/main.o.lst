   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"main.c"
  21              	.Ltext0:
  22              		.file 1 "../main.c"
 2733              		.align	2
 2736              	RL:
 2737 0000 00000000 		.word	0
 2738 0004 05000000 		.word	5
 2739 0008 00000000 		.word	0
 2740 000c 00000000 		.word	0
 2741 0010 00000000 		.word	0
 2742              		.text
 2743              		.align	2
 2744              		.global	setup
 2746              	setup:
 2747              	.LFB0:
   1:../main.c     **** #include <stdio.h>
   2:../main.c     **** #include "44b.h"
   3:../main.c     **** #include "button.h"
   4:../main.c     **** #include "leds.h"
   5:../main.c     **** #include "utils.h"
   6:../main.c     **** #include "D8Led.h"
   7:../main.c     **** #include "gpio.h"
   8:../main.c     **** 
   9:../main.c     **** struct RLstat {
  10:../main.c     **** 	int moving;
  11:../main.c     **** 	int speed;
  12:../main.c     **** 	int iter;
  13:../main.c     **** 	int direction;
  14:../main.c     **** 	int position;
  15:../main.c     **** };
  16:../main.c     **** 
  17:../main.c     **** static struct RLstat RL = {
  18:../main.c     **** 	.moving = 0,
  19:../main.c     **** 	.speed = 5,
  20:../main.c     **** 	.iter = 0,
  21:../main.c     **** 	.direction = 0,
  22:../main.c     **** 	.position = 0,
  23:../main.c     **** };
  24:../main.c     **** 
  25:../main.c     **** int setup(void)
  26:../main.c     **** {
 2748              		.loc 1 26 0
 2749              		.cfi_startproc
 2750              		@ Function supports interworking.
 2751              		@ args = 0, pretend = 0, frame = 0
 2752              		@ frame_needed = 1, uses_anonymous_args = 0
 2753 0000 0DC0A0E1 		mov	ip, sp
 2754              	.LCFI0:
 2755              		.cfi_def_cfa_register 12
 2756 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2757 0008 04B04CE2 		sub	fp, ip, #4
 2758              		.cfi_offset 14, -8
 2759              		.cfi_offset 13, -12
 2760              		.cfi_offset 11, -16
 2761              	.LCFI1:
 2762              		.cfi_def_cfa 11, 4
  27:../main.c     **** 	leds_init();
 2763              		.loc 1 27 0
 2764 000c FEFFFFEB 		bl	leds_init
  28:../main.c     **** 	D8Led_init();
 2765              		.loc 1 28 0
 2766 0010 FEFFFFEB 		bl	D8Led_init
  29:../main.c     **** 	D8Led_segment(RL.position);
 2767              		.loc 1 29 0
 2768 0014 54309FE5 		ldr	r3, .L2
 2769 0018 103093E5 		ldr	r3, [r3, #16]
 2770 001c 0300A0E1 		mov	r0, r3
 2771 0020 FEFFFFEB 		bl	D8Led_segment
  30:../main.c     **** 
  31:../main.c     **** 	/* Port G: configuración para espera activa */
  32:../main.c     **** 
  33:../main.c     **** 	//COMPLETAR: utilizando el interfaz para el puerto G definido en gpio.h hay
  34:../main.c     **** 	//que configurar los pines 6 y 7 del puerto G como pines de entrada y
  35:../main.c     **** 	//activar las correspondientes resistencias de pull-up
  36:../main.c     **** 	
  37:../main.c     **** 	/*******************************************/
  38:../main.c     **** 	portG_conf(6, INPUT);
 2772              		.loc 1 38 0
 2773 0024 0600A0E3 		mov	r0, #6
 2774 0028 0010A0E3 		mov	r1, #0
 2775 002c FEFFFFEB 		bl	portG_conf
  39:../main.c     **** 	portG_conf(7, INPUT);
 2776              		.loc 1 39 0
 2777 0030 0700A0E3 		mov	r0, #7
 2778 0034 0010A0E3 		mov	r1, #0
 2779 0038 FEFFFFEB 		bl	portG_conf
  40:../main.c     **** 	portG_conf_pup(6, ENABLE);
 2780              		.loc 1 40 0
 2781 003c 0600A0E3 		mov	r0, #6
 2782 0040 0110A0E3 		mov	r1, #1
 2783 0044 FEFFFFEB 		bl	portG_conf_pup
  41:../main.c     **** 	portG_conf_pup(7, ENABLE);
 2784              		.loc 1 41 0
 2785 0048 0700A0E3 		mov	r0, #7
 2786 004c 0110A0E3 		mov	r1, #1
 2787 0050 FEFFFFEB 		bl	portG_conf_pup
  42:../main.c     **** 
  43:../main.c     **** 	Delay(0);
 2788              		.loc 1 43 0
 2789 0054 0000A0E3 		mov	r0, #0
 2790 0058 FEFFFFEB 		bl	Delay
  44:../main.c     **** 	return 0;
 2791              		.loc 1 44 0
 2792 005c 0030A0E3 		mov	r3, #0
  45:../main.c     **** }
 2793              		.loc 1 45 0
 2794 0060 0300A0E1 		mov	r0, r3
 2795 0064 0CD04BE2 		sub	sp, fp, #12
 2796 0068 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2797 006c 1EFF2FE1 		bx	lr
 2798              	.L3:
 2799              		.align	2
 2800              	.L2:
 2801 0070 00000000 		.word	RL
 2802              		.cfi_endproc
 2803              	.LFE0:
 2805              		.align	2
 2806              		.global	loop
 2808              	loop:
 2809              	.LFB1:
  46:../main.c     **** 
  47:../main.c     **** int loop(void)
  48:../main.c     **** {
 2810              		.loc 1 48 0
 2811              		.cfi_startproc
 2812              		@ Function supports interworking.
 2813              		@ args = 0, pretend = 0, frame = 8
 2814              		@ frame_needed = 1, uses_anonymous_args = 0
 2815 0074 0DC0A0E1 		mov	ip, sp
 2816              	.LCFI2:
 2817              		.cfi_def_cfa_register 12
 2818 0078 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2819 007c 04B04CE2 		sub	fp, ip, #4
 2820              		.cfi_offset 14, -8
 2821              		.cfi_offset 13, -12
 2822              		.cfi_offset 11, -16
 2823              	.LCFI3:
 2824              		.cfi_def_cfa 11, 4
 2825 0080 08D04DE2 		sub	sp, sp, #8
  49:../main.c     **** 	unsigned int buttons = read_button();
 2826              		.loc 1 49 0
 2827 0084 FEFFFFEB 		bl	read_button
 2828 0088 10000BE5 		str	r0, [fp, #-16]
  50:../main.c     **** 
  51:../main.c     **** 	if (buttons & BUT1) {
 2829              		.loc 1 51 0
 2830 008c 10301BE5 		ldr	r3, [fp, #-16]
 2831 0090 013003E2 		and	r3, r3, #1
 2832 0094 FF3003E2 		and	r3, r3, #255
 2833 0098 000053E3 		cmp	r3, #0
 2834 009c 0600000A 		beq	.L5
  52:../main.c     **** 		// COMPLETAR: utilizando la interfaz para los leds definida en leds.h
  53:../main.c     **** 		// hay que apagar ambos leds
  54:../main.c     **** 		// También hay que comutar la dirección del movimiento del led rotante
  55:../main.c     **** 		// representado por el campo direction de la variable RL
  56:../main.c     **** 		led1_off();
 2835              		.loc 1 56 0
 2836 00a0 FEFFFFEB 		bl	led1_off
  57:../main.c     **** 		led2_off();
 2837              		.loc 1 57 0
 2838 00a4 FEFFFFEB 		bl	led2_off
  58:../main.c     **** 
  59:../main.c     **** 		RL.direction = ~RL.direction;
 2839              		.loc 1 59 0
 2840 00a8 70319FE5 		ldr	r3, .L16
 2841 00ac 0C3093E5 		ldr	r3, [r3, #12]
 2842 00b0 0320E0E1 		mvn	r2, r3
 2843 00b4 64319FE5 		ldr	r3, .L16
 2844 00b8 0C2083E5 		str	r2, [r3, #12]
 2845              	.L5:
  60:../main.c     **** 	}
  61:../main.c     **** 
  62:../main.c     **** 	if (buttons & BUT2) {
 2846              		.loc 1 62 0
 2847 00bc 10301BE5 		ldr	r3, [fp, #-16]
 2848 00c0 023003E2 		and	r3, r3, #2
 2849 00c4 000053E3 		cmp	r3, #0
 2850 00c8 1D00000A 		beq	.L6
 2851              	.LBB2:
  63:../main.c     **** 		// COMPLETAR: utilizando la interfaz para los leds definida en leds.h
  64:../main.c     **** 		// Incrementar contador de pulsaciones. Si es par, conumtar led1. Si es impar, conmutar el led2.
  65:../main.c     **** 		// También hay que comutar el estado de movimiento del led rotante
  66:../main.c     **** 		// representado por el campo moving de la variable RL, y en caso de
  67:../main.c     **** 		// ponerlo en marcha debemos reiniciar el campo iter al valor del campo
  68:../main.c     **** 		// speed.
  69:../main.c     **** 
  70:../main.c     **** 		//No se de donde se saca el contador.
  71:../main.c     **** 
  72:../main.c     **** 		int contadorMagico = 0;
 2852              		.loc 1 72 0
 2853 00cc 0030A0E3 		mov	r3, #0
 2854 00d0 14300BE5 		str	r3, [fp, #-20]
  73:../main.c     **** 
  74:../main.c     **** 		if(contadorMagico%2){
 2855              		.loc 1 74 0
 2856 00d4 14301BE5 		ldr	r3, [fp, #-20]
 2857 00d8 013003E2 		and	r3, r3, #1
 2858 00dc FF3003E2 		and	r3, r3, #255
 2859 00e0 000053E3 		cmp	r3, #0
 2860 00e4 0100000A 		beq	.L7
  75:../main.c     **** 			led2_switch();
 2861              		.loc 1 75 0
 2862 00e8 FEFFFFEB 		bl	led2_switch
 2863 00ec 000000EA 		b	.L8
 2864              	.L7:
  76:../main.c     **** 		}else{
  77:../main.c     **** 			led1_switch();
 2865              		.loc 1 77 0
 2866 00f0 FEFFFFEB 		bl	led1_switch
 2867              	.L8:
  78:../main.c     **** 		}
  79:../main.c     **** 
  80:../main.c     **** 		if(RL.moving == 0){
 2868              		.loc 1 80 0
 2869 00f4 24319FE5 		ldr	r3, .L16
 2870 00f8 003093E5 		ldr	r3, [r3, #0]
 2871 00fc 000053E3 		cmp	r3, #0
 2872 0100 0700001A 		bne	.L9
  81:../main.c     **** 
  82:../main.c     **** 			RL.moving = 1;
 2873              		.loc 1 82 0
 2874 0104 14319FE5 		ldr	r3, .L16
 2875 0108 0120A0E3 		mov	r2, #1
 2876 010c 002083E5 		str	r2, [r3, #0]
  83:../main.c     **** 			RL.iter = RL.speed;
 2877              		.loc 1 83 0
 2878 0110 08319FE5 		ldr	r3, .L16
 2879 0114 042093E5 		ldr	r2, [r3, #4]
 2880 0118 00319FE5 		ldr	r3, .L16
 2881 011c 082083E5 		str	r2, [r3, #8]
 2882 0120 020000EA 		b	.L10
 2883              	.L9:
  84:../main.c     **** 
  85:../main.c     **** 		}else{
  86:../main.c     **** 			RL.moving = 0;
 2884              		.loc 1 86 0
 2885 0124 F4309FE5 		ldr	r3, .L16
 2886 0128 0020A0E3 		mov	r2, #0
 2887 012c 002083E5 		str	r2, [r3, #0]
 2888              	.L10:
  87:../main.c     **** 		}
  88:../main.c     **** 
  89:../main.c     **** 		RL.direction = ~RL.direction;
 2889              		.loc 1 89 0
 2890 0130 E8309FE5 		ldr	r3, .L16
 2891 0134 0C3093E5 		ldr	r3, [r3, #12]
 2892 0138 0320E0E1 		mvn	r2, r3
 2893 013c DC309FE5 		ldr	r3, .L16
 2894 0140 0C2083E5 		str	r2, [r3, #12]
 2895              	.L6:
 2896              	.LBE2:
  90:../main.c     **** 
  91:../main.c     **** 	}
  92:../main.c     **** 
  93:../main.c     **** 	if (RL.moving) {
 2897              		.loc 1 93 0
 2898 0144 D4309FE5 		ldr	r3, .L16
 2899 0148 003093E5 		ldr	r3, [r3, #0]
 2900 014c 000053E3 		cmp	r3, #0
 2901 0150 2B00000A 		beq	.L11
  94:../main.c     **** 		RL.iter--;
 2902              		.loc 1 94 0
 2903 0154 C4309FE5 		ldr	r3, .L16
 2904 0158 083093E5 		ldr	r3, [r3, #8]
 2905 015c 012043E2 		sub	r2, r3, #1
 2906 0160 B8309FE5 		ldr	r3, .L16
 2907 0164 082083E5 		str	r2, [r3, #8]
  95:../main.c     **** 		if (RL.iter == 0) {
 2908              		.loc 1 95 0
 2909 0168 B0309FE5 		ldr	r3, .L16
 2910 016c 083093E5 		ldr	r3, [r3, #8]
 2911 0170 000053E3 		cmp	r3, #0
 2912 0174 2200001A 		bne	.L11
  96:../main.c     **** 			// COMPLETAR: debemos hacer avanzar el led rotante una posición en
  97:../main.c     **** 			// la dirección indicada por el campo direction de la variable RL.
  98:../main.c     **** 			// La posición actual está representada en el campo position.
  99:../main.c     **** 			// Recordar que queremos un movimiento circular, representado por
 100:../main.c     **** 			// las 6 primeras posiciones en el array Segmentes del display de 8
 101:../main.c     **** 			// segmentos, por lo que position debe estar siempre entre 0 y 5.
 102:../main.c     **** 			
 103:../main.c     **** 			if(RL.direction == 0){
 2913              		.loc 1 103 0
 2914 0178 A0309FE5 		ldr	r3, .L16
 2915 017c 0C3093E5 		ldr	r3, [r3, #12]
 2916 0180 000053E3 		cmp	r3, #0
 2917 0184 0D00001A 		bne	.L12
 104:../main.c     **** 
 105:../main.c     **** 				if(RL.position != 5){
 2918              		.loc 1 105 0
 2919 0188 90309FE5 		ldr	r3, .L16
 2920 018c 103093E5 		ldr	r3, [r3, #16]
 2921 0190 050053E3 		cmp	r3, #5
 2922 0194 0500000A 		beq	.L13
 106:../main.c     **** 					RL.position++;
 2923              		.loc 1 106 0
 2924 0198 80309FE5 		ldr	r3, .L16
 2925 019c 103093E5 		ldr	r3, [r3, #16]
 2926 01a0 012083E2 		add	r2, r3, #1
 2927 01a4 74309FE5 		ldr	r3, .L16
 2928 01a8 102083E5 		str	r2, [r3, #16]
 2929 01ac 100000EA 		b	.L14
 2930              	.L13:
 107:../main.c     **** 				}else{
 108:../main.c     **** 					RL.position = 0;
 2931              		.loc 1 108 0
 2932 01b0 68309FE5 		ldr	r3, .L16
 2933 01b4 0020A0E3 		mov	r2, #0
 2934 01b8 102083E5 		str	r2, [r3, #16]
 2935 01bc 0C0000EA 		b	.L14
 2936              	.L12:
 109:../main.c     **** 				}
 110:../main.c     **** 
 111:../main.c     **** 			}else{
 112:../main.c     **** 				if(RL.position != 0){
 2937              		.loc 1 112 0
 2938 01c0 58309FE5 		ldr	r3, .L16
 2939 01c4 103093E5 		ldr	r3, [r3, #16]
 2940 01c8 000053E3 		cmp	r3, #0
 2941 01cc 0500000A 		beq	.L15
 113:../main.c     **** 					RL.position--;
 2942              		.loc 1 113 0
 2943 01d0 48309FE5 		ldr	r3, .L16
 2944 01d4 103093E5 		ldr	r3, [r3, #16]
 2945 01d8 012043E2 		sub	r2, r3, #1
 2946 01dc 3C309FE5 		ldr	r3, .L16
 2947 01e0 102083E5 		str	r2, [r3, #16]
 2948 01e4 020000EA 		b	.L14
 2949              	.L15:
 114:../main.c     **** 				}else{
 115:../main.c     **** 					RL.position = 5;
 2950              		.loc 1 115 0
 2951 01e8 30309FE5 		ldr	r3, .L16
 2952 01ec 0520A0E3 		mov	r2, #5
 2953 01f0 102083E5 		str	r2, [r3, #16]
 2954              	.L14:
 116:../main.c     **** 				}
 117:../main.c     **** 			}
 118:../main.c     **** 
 119:../main.c     **** 			D8Led_segment(RL.position);
 2955              		.loc 1 119 0
 2956 01f4 24309FE5 		ldr	r3, .L16
 2957 01f8 103093E5 		ldr	r3, [r3, #16]
 2958 01fc 0300A0E1 		mov	r0, r3
 2959 0200 FEFFFFEB 		bl	D8Led_segment
 2960              	.L11:
 120:../main.c     **** 		}
 121:../main.c     **** 	}
 122:../main.c     **** 
 123:../main.c     **** 	Delay(2000); // espera de 200ms para que el bucle se repita 5 veces por segundo
 2961              		.loc 1 123 0
 2962 0204 7D0EA0E3 		mov	r0, #2000
 2963 0208 FEFFFFEB 		bl	Delay
 124:../main.c     **** 	return 0;
 2964              		.loc 1 124 0
 2965 020c 0030A0E3 		mov	r3, #0
 125:../main.c     **** }
 2966              		.loc 1 125 0
 2967 0210 0300A0E1 		mov	r0, r3
 2968 0214 0CD04BE2 		sub	sp, fp, #12
 2969 0218 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2970 021c 1EFF2FE1 		bx	lr
 2971              	.L17:
 2972              		.align	2
 2973              	.L16:
 2974 0220 00000000 		.word	RL
 2975              		.cfi_endproc
 2976              	.LFE1:
 2978              		.align	2
 2979              		.global	main
 2981              	main:
 2982              	.LFB2:
 126:../main.c     **** 
 127:../main.c     **** 
 128:../main.c     **** int main(void)
 129:../main.c     **** {
 2983              		.loc 1 129 0
 2984              		.cfi_startproc
 2985              		@ Function supports interworking.
 2986              		@ args = 0, pretend = 0, frame = 0
 2987              		@ frame_needed = 1, uses_anonymous_args = 0
 2988 0224 0DC0A0E1 		mov	ip, sp
 2989              	.LCFI4:
 2990              		.cfi_def_cfa_register 12
 2991 0228 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2992 022c 04B04CE2 		sub	fp, ip, #4
 2993              		.cfi_offset 14, -8
 2994              		.cfi_offset 13, -12
 2995              		.cfi_offset 11, -16
 2996              	.LCFI5:
 2997              		.cfi_def_cfa 11, 4
 130:../main.c     **** 	setup();
 2998              		.loc 1 130 0
 2999 0230 FEFFFFEB 		bl	setup
 3000              	.L19:
 131:../main.c     **** 
 132:../main.c     **** 	while (1) {
 133:../main.c     **** 		loop();
 3001              		.loc 1 133 0 discriminator 1
 3002 0234 FEFFFFEB 		bl	loop
 134:../main.c     **** 	}
 3003              		.loc 1 134 0 discriminator 1
 3004 0238 FDFFFFEA 		b	.L19
 3005              		.cfi_endproc
 3006              	.LFE2:
 3008              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2733   .data:00000000 $d
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2736   .data:00000000 RL
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2743   .text:00000000 $a
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2746   .text:00000000 setup
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2801   .text:00000070 $d
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2805   .text:00000074 $a
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2808   .text:00000074 loop
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2974   .text:00000220 $d
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2978   .text:00000224 $a
C:\Users\Osurac\AppData\Local\Temp\ccHjnA9P.s:2981   .text:00000224 main
                     .debug_frame:00000010 $d

UNDEFINED SYMBOLS
leds_init
D8Led_init
D8Led_segment
portG_conf
portG_conf_pup
Delay
read_button
led1_off
led2_off
led2_switch
led1_switch
