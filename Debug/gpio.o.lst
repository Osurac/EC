   1              		.cpu arm7tdmi
   2              		.fpu softvfp
   3              		.eabi_attribute 20, 1
   4              		.eabi_attribute 21, 1
   5              		.eabi_attribute 23, 3
   6              		.eabi_attribute 24, 1
   7              		.eabi_attribute 25, 1
   8              		.eabi_attribute 26, 1
   9              		.eabi_attribute 30, 6
  10              		.eabi_attribute 18, 4
  11              		.file	"gpio.c"
  21              	.Ltext0:
  22              		.file 1 "../gpio.c"
 1698              		.align	2
 1699              		.global	portB_conf
 1701              	portB_conf:
 1702              	.LFB0:
   1:../gpio.c     **** ﻿#include "44b.h"
   2:../gpio.c     **** #include "gpio.h"
   3:../gpio.c     **** 
   4:../gpio.c     **** /* Port B interface implementation */
   5:../gpio.c     **** 
   6:../gpio.c     **** int portB_conf(int pin, enum port_mode mode)
   7:../gpio.c     **** {
 1703              		.loc 1 7 0
 1704              		.cfi_startproc
 1705              		@ Function supports interworking.
 1706              		@ args = 0, pretend = 0, frame = 16
 1707              		@ frame_needed = 1, uses_anonymous_args = 0
 1708 0000 0DC0A0E1 		mov	ip, sp
 1709              	.LCFI0:
 1710              		.cfi_def_cfa_register 12
 1711 0004 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1712 0008 04B04CE2 		sub	fp, ip, #4
 1713              		.cfi_offset 14, -8
 1714              		.cfi_offset 13, -12
 1715              		.cfi_offset 11, -16
 1716              	.LCFI1:
 1717              		.cfi_def_cfa 11, 4
 1718 000c 10D04DE2 		sub	sp, sp, #16
 1719 0010 18000BE5 		str	r0, [fp, #-24]
 1720 0014 0130A0E1 		mov	r3, r1
 1721 0018 19304BE5 		strb	r3, [fp, #-25]
   8:../gpio.c     **** 	int ret = 0;
 1722              		.loc 1 8 0
 1723 001c 0030A0E3 		mov	r3, #0
 1724 0020 10300BE5 		str	r3, [fp, #-16]
   9:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1725              		.loc 1 9 0
 1726 0024 18301BE5 		ldr	r3, [fp, #-24]
 1727 0028 000053E3 		cmp	r3, #0
 1728 002c 020000BA 		blt	.L2
 1729              		.loc 1 9 0 is_stmt 0 discriminator 1
 1730 0030 18301BE5 		ldr	r3, [fp, #-24]
 1731 0034 0A0053E3 		cmp	r3, #10
 1732 0038 010000DA 		ble	.L3
 1733              	.L2:
  10:../gpio.c     **** 		return -1; // indica error
 1734              		.loc 1 10 0 is_stmt 1
 1735 003c 0030E0E3 		mvn	r3, #0
 1736 0040 1B0000EA 		b	.L4
 1737              	.L3:
  11:../gpio.c     **** 
  12:../gpio.c     **** 	if (mode == SIGOUT){
 1738              		.loc 1 12 0
 1739 0044 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1740 0048 020053E3 		cmp	r3, #2
 1741 004c 0800001A 		bne	.L5
  13:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 1 para que por
  14:../gpio.c     **** 		// dicho pin en el puerto B salga la señal correspondiente del
  15:../gpio.c     **** 		// controlador de memoria
  16:../gpio.c     **** 
  17:../gpio.c     **** 		rPCONB |= (0x1 << pin);
 1742              		.loc 1 17 0
 1743 0050 6C309FE5 		ldr	r3, .L8
 1744 0054 68209FE5 		ldr	r2, .L8
 1745 0058 001092E5 		ldr	r1, [r2, #0]
 1746 005c 0100A0E3 		mov	r0, #1
 1747 0060 18201BE5 		ldr	r2, [fp, #-24]
 1748 0064 1022A0E1 		mov	r2, r0, asl r2
 1749 0068 022081E1 		orr	r2, r1, r2
 1750 006c 002083E5 		str	r2, [r3, #0]
 1751 0070 0E0000EA 		b	.L6
 1752              	.L5:
  18:../gpio.c     **** 
  19:../gpio.c     **** 	}else if (mode == OUTPUT){
 1753              		.loc 1 19 0
 1754 0074 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1755 0078 010053E3 		cmp	r3, #1
 1756 007c 0900001A 		bne	.L7
  20:../gpio.c     **** 		// COMPLETAR: poner en rPCONB el bit indicado por pin a 0 para que dicho
  21:../gpio.c     **** 		// pin sea un pin de salida
  22:../gpio.c     **** 		rPCONB &= ~(0x1 << pin);
 1757              		.loc 1 22 0
 1758 0080 3C309FE5 		ldr	r3, .L8
 1759 0084 38209FE5 		ldr	r2, .L8
 1760 0088 001092E5 		ldr	r1, [r2, #0]
 1761 008c 0100A0E3 		mov	r0, #1
 1762 0090 18201BE5 		ldr	r2, [fp, #-24]
 1763 0094 1022A0E1 		mov	r2, r0, asl r2
 1764 0098 0220E0E1 		mvn	r2, r2
 1765 009c 022001E0 		and	r2, r1, r2
 1766 00a0 002083E5 		str	r2, [r3, #0]
 1767 00a4 010000EA 		b	.L6
 1768              	.L7:
  23:../gpio.c     **** 	}else{
  24:../gpio.c     **** 		ret = -1; // indica error
 1769              		.loc 1 24 0
 1770 00a8 0030E0E3 		mvn	r3, #0
 1771 00ac 10300BE5 		str	r3, [fp, #-16]
 1772              	.L6:
  25:../gpio.c     **** 	}
  26:../gpio.c     **** 	return ret;
 1773              		.loc 1 26 0
 1774 00b0 10301BE5 		ldr	r3, [fp, #-16]
 1775              	.L4:
  27:../gpio.c     **** }
 1776              		.loc 1 27 0
 1777 00b4 0300A0E1 		mov	r0, r3
 1778 00b8 0CD04BE2 		sub	sp, fp, #12
 1779 00bc 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1780 00c0 1EFF2FE1 		bx	lr
 1781              	.L9:
 1782              		.align	2
 1783              	.L8:
 1784 00c4 0800D201 		.word	30539784
 1785              		.cfi_endproc
 1786              	.LFE0:
 1788              		.align	2
 1789              		.global	portB_write
 1791              	portB_write:
 1792              	.LFB1:
  28:../gpio.c     **** 
  29:../gpio.c     **** int portB_write(int pin, enum digital val)
  30:../gpio.c     **** {
 1793              		.loc 1 30 0
 1794              		.cfi_startproc
 1795              		@ Function supports interworking.
 1796              		@ args = 0, pretend = 0, frame = 8
 1797              		@ frame_needed = 1, uses_anonymous_args = 0
 1798 00c8 0DC0A0E1 		mov	ip, sp
 1799              	.LCFI2:
 1800              		.cfi_def_cfa_register 12
 1801 00cc 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1802 00d0 04B04CE2 		sub	fp, ip, #4
 1803              		.cfi_offset 14, -8
 1804              		.cfi_offset 13, -12
 1805              		.cfi_offset 11, -16
 1806              	.LCFI3:
 1807              		.cfi_def_cfa 11, 4
 1808 00d4 08D04DE2 		sub	sp, sp, #8
 1809 00d8 10000BE5 		str	r0, [fp, #-16]
 1810 00dc 0130A0E1 		mov	r3, r1
 1811 00e0 11304BE5 		strb	r3, [fp, #-17]
  31:../gpio.c     **** 	if (pin < 0 || pin > 10)
 1812              		.loc 1 31 0
 1813 00e4 10301BE5 		ldr	r3, [fp, #-16]
 1814 00e8 000053E3 		cmp	r3, #0
 1815 00ec 020000BA 		blt	.L11
 1816              		.loc 1 31 0 is_stmt 0 discriminator 1
 1817 00f0 10301BE5 		ldr	r3, [fp, #-16]
 1818 00f4 0A0053E3 		cmp	r3, #10
 1819 00f8 010000DA 		ble	.L12
 1820              	.L11:
  32:../gpio.c     **** 		return -1; // indica error
 1821              		.loc 1 32 0 is_stmt 1
 1822 00fc 0030E0E3 		mvn	r3, #0
 1823 0100 1A0000EA 		b	.L13
 1824              	.L12:
  33:../gpio.c     **** 
  34:../gpio.c     **** 	if (val < 0 || val > 1)
 1825              		.loc 1 34 0
 1826 0104 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1827 0108 010053E3 		cmp	r3, #1
 1828 010c 0100009A 		bls	.L14
  35:../gpio.c     **** 		return -1; // indica error
 1829              		.loc 1 35 0
 1830 0110 0030E0E3 		mvn	r3, #0
 1831 0114 150000EA 		b	.L13
 1832              	.L14:
  36:../gpio.c     **** 
  37:../gpio.c     **** 	if (val){
 1833              		.loc 1 37 0
 1834 0118 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 1835 011c 000053E3 		cmp	r3, #0
 1836 0120 0800000A 		beq	.L15
  38:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 1
  39:../gpio.c     **** 		rPDATB |= (0x1 << pin);
 1837              		.loc 1 39 0
 1838 0124 54309FE5 		ldr	r3, .L17
 1839 0128 50209FE5 		ldr	r2, .L17
 1840 012c 001092E5 		ldr	r1, [r2, #0]
 1841 0130 0100A0E3 		mov	r0, #1
 1842 0134 10201BE5 		ldr	r2, [fp, #-16]
 1843 0138 1022A0E1 		mov	r2, r0, asl r2
 1844 013c 022081E1 		orr	r2, r1, r2
 1845 0140 002083E5 		str	r2, [r3, #0]
 1846 0144 080000EA 		b	.L16
 1847              	.L15:
  40:../gpio.c     **** 
  41:../gpio.c     **** 	}else{
  42:../gpio.c     **** 		// COMPLETAR: poner en rPDATB el bit indicado por pin a 0
  43:../gpio.c     **** 		rPDATB |= ~(0x1 << pin);
 1848              		.loc 1 43 0
 1849 0148 30309FE5 		ldr	r3, .L17
 1850 014c 2C209FE5 		ldr	r2, .L17
 1851 0150 001092E5 		ldr	r1, [r2, #0]
 1852 0154 0100A0E3 		mov	r0, #1
 1853 0158 10201BE5 		ldr	r2, [fp, #-16]
 1854 015c 1022A0E1 		mov	r2, r0, asl r2
 1855 0160 0220E0E1 		mvn	r2, r2
 1856 0164 022081E1 		orr	r2, r1, r2
 1857 0168 002083E5 		str	r2, [r3, #0]
 1858              	.L16:
  44:../gpio.c     **** 	}
  45:../gpio.c     **** 	return 0;
 1859              		.loc 1 45 0
 1860 016c 0030A0E3 		mov	r3, #0
 1861              	.L13:
  46:../gpio.c     **** }
 1862              		.loc 1 46 0
 1863 0170 0300A0E1 		mov	r0, r3
 1864 0174 0CD04BE2 		sub	sp, fp, #12
 1865 0178 00689DE8 		ldmfd	sp, {fp, sp, lr}
 1866 017c 1EFF2FE1 		bx	lr
 1867              	.L18:
 1868              		.align	2
 1869              	.L17:
 1870 0180 0C00D201 		.word	30539788
 1871              		.cfi_endproc
 1872              	.LFE1:
 1874              		.align	2
 1875              		.global	portG_conf
 1877              	portG_conf:
 1878              	.LFB2:
  47:../gpio.c     **** 
  48:../gpio.c     **** /* Port G interface implementation */
  49:../gpio.c     **** 
  50:../gpio.c     **** int portG_conf(int pin, enum port_mode mode)
  51:../gpio.c     **** {
 1879              		.loc 1 51 0
 1880              		.cfi_startproc
 1881              		@ Function supports interworking.
 1882              		@ args = 0, pretend = 0, frame = 16
 1883              		@ frame_needed = 1, uses_anonymous_args = 0
 1884 0184 0DC0A0E1 		mov	ip, sp
 1885              	.LCFI4:
 1886              		.cfi_def_cfa_register 12
 1887 0188 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 1888 018c 04B04CE2 		sub	fp, ip, #4
 1889              		.cfi_offset 14, -8
 1890              		.cfi_offset 13, -12
 1891              		.cfi_offset 11, -16
 1892              	.LCFI5:
 1893              		.cfi_def_cfa 11, 4
 1894 0190 10D04DE2 		sub	sp, sp, #16
 1895 0194 18000BE5 		str	r0, [fp, #-24]
 1896 0198 0130A0E1 		mov	r3, r1
 1897 019c 19304BE5 		strb	r3, [fp, #-25]
  52:../gpio.c     **** 	int pos = pin*2;
 1898              		.loc 1 52 0
 1899 01a0 18301BE5 		ldr	r3, [fp, #-24]
 1900 01a4 8330A0E1 		mov	r3, r3, asl #1
 1901 01a8 10300BE5 		str	r3, [fp, #-16]
  53:../gpio.c     **** 
  54:../gpio.c     **** 
  55:../gpio.c     **** 	if (pin < 0 || pin > 7)
 1902              		.loc 1 55 0
 1903 01ac 18301BE5 		ldr	r3, [fp, #-24]
 1904 01b0 000053E3 		cmp	r3, #0
 1905 01b4 020000BA 		blt	.L20
 1906              		.loc 1 55 0 is_stmt 0 discriminator 1
 1907 01b8 18301BE5 		ldr	r3, [fp, #-24]
 1908 01bc 070053E3 		cmp	r3, #7
 1909 01c0 010000DA 		ble	.L21
 1910              	.L20:
  56:../gpio.c     **** 		return -1; // indica error
 1911              		.loc 1 56 0 is_stmt 1
 1912 01c4 0030E0E3 		mvn	r3, #0
 1913 01c8 5A0000EA 		b	.L22
 1914              	.L21:
  57:../gpio.c     **** 
  58:../gpio.c     **** 	switch (mode) {
 1915              		.loc 1 58 0
 1916 01cc 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 1917 01d0 030053E3 		cmp	r3, #3
 1918 01d4 03F19F97 		ldrls	pc, [pc, r3, asl #2]
 1919 01d8 530000EA 		b	.L23
 1920              	.L28:
 1921 01dc EC010000 		.word	.L24
 1922 01e0 3C020000 		.word	.L25
 1923 01e4 8C020000 		.word	.L26
 1924 01e8 DC020000 		.word	.L27
 1925              	.L24:
  59:../gpio.c     **** 		case INPUT:
  60:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 00 a partir de la posición pos para
  61:../gpio.c     **** 			// configurar como pin de entrada el pin indicado por el parámetro pin
  62:../gpio.c     **** 			//Osu dice: rPCONG 00
  63:../gpio.c     **** 
  64:../gpio.c     **** 			rPCONG &= ~(0x1 << pos);
 1926              		.loc 1 64 0
 1927 01ec 54319FE5 		ldr	r3, .L30
 1928 01f0 50219FE5 		ldr	r2, .L30
 1929 01f4 001092E5 		ldr	r1, [r2, #0]
 1930 01f8 0100A0E3 		mov	r0, #1
 1931 01fc 10201BE5 		ldr	r2, [fp, #-16]
 1932 0200 1022A0E1 		mov	r2, r0, asl r2
 1933 0204 0220E0E1 		mvn	r2, r2
 1934 0208 022001E0 		and	r2, r1, r2
 1935 020c 002083E5 		str	r2, [r3, #0]
  65:../gpio.c     **** 			rPCONG &= ~(0x1 << (pos + 1));
 1936              		.loc 1 65 0
 1937 0210 30319FE5 		ldr	r3, .L30
 1938 0214 2C219FE5 		ldr	r2, .L30
 1939 0218 001092E5 		ldr	r1, [r2, #0]
 1940 021c 10201BE5 		ldr	r2, [fp, #-16]
 1941 0220 012082E2 		add	r2, r2, #1
 1942 0224 0100A0E3 		mov	r0, #1
 1943 0228 1022A0E1 		mov	r2, r0, asl r2
 1944 022c 0220E0E1 		mvn	r2, r2
 1945 0230 022001E0 		and	r2, r1, r2
 1946 0234 002083E5 		str	r2, [r3, #0]
  66:../gpio.c     **** 
  67:../gpio.c     **** 			break;
 1947              		.loc 1 67 0
 1948 0238 3D0000EA 		b	.L29
 1949              	.L25:
  68:../gpio.c     **** 		case OUTPUT:
  69:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 01 a partir de la posición pos para
  70:../gpio.c     **** 			// configurar como pin de salida el pin indicado por el parámetro pin
  71:../gpio.c     **** 			//Osu dice: rPCONG 01
  72:../gpio.c     **** 			rPCONG |= ~(0x1 << pos);
 1950              		.loc 1 72 0
 1951 023c 04319FE5 		ldr	r3, .L30
 1952 0240 00219FE5 		ldr	r2, .L30
 1953 0244 001092E5 		ldr	r1, [r2, #0]
 1954 0248 0100A0E3 		mov	r0, #1
 1955 024c 10201BE5 		ldr	r2, [fp, #-16]
 1956 0250 1022A0E1 		mov	r2, r0, asl r2
 1957 0254 0220E0E1 		mvn	r2, r2
 1958 0258 022081E1 		orr	r2, r1, r2
 1959 025c 002083E5 		str	r2, [r3, #0]
  73:../gpio.c     **** 			rPCONG &= ~(0x1 << (pos + 1));
 1960              		.loc 1 73 0
 1961 0260 E0309FE5 		ldr	r3, .L30
 1962 0264 DC209FE5 		ldr	r2, .L30
 1963 0268 001092E5 		ldr	r1, [r2, #0]
 1964 026c 10201BE5 		ldr	r2, [fp, #-16]
 1965 0270 012082E2 		add	r2, r2, #1
 1966 0274 0100A0E3 		mov	r0, #1
 1967 0278 1022A0E1 		mov	r2, r0, asl r2
 1968 027c 0220E0E1 		mvn	r2, r2
 1969 0280 022001E0 		and	r2, r1, r2
 1970 0284 002083E5 		str	r2, [r3, #0]
  74:../gpio.c     **** 			break;
 1971              		.loc 1 74 0
 1972 0288 290000EA 		b	.L29
 1973              	.L26:
  75:../gpio.c     **** 		case SIGOUT:
  76:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 10 a partir de la posición pos para
  77:../gpio.c     **** 			// que salga la señal interna correspondiente por el pin indicado
  78:../gpio.c     **** 			// por el parámetro pin
  79:../gpio.c     **** 			//Osu dice: rPCONG 10
  80:../gpio.c     **** 			rPCONG &= ~(0x1 << pos);
 1974              		.loc 1 80 0
 1975 028c B4309FE5 		ldr	r3, .L30
 1976 0290 B0209FE5 		ldr	r2, .L30
 1977 0294 001092E5 		ldr	r1, [r2, #0]
 1978 0298 0100A0E3 		mov	r0, #1
 1979 029c 10201BE5 		ldr	r2, [fp, #-16]
 1980 02a0 1022A0E1 		mov	r2, r0, asl r2
 1981 02a4 0220E0E1 		mvn	r2, r2
 1982 02a8 022001E0 		and	r2, r1, r2
 1983 02ac 002083E5 		str	r2, [r3, #0]
  81:../gpio.c     **** 			rPCONG |= ~(0x1 << (pos + 1));
 1984              		.loc 1 81 0
 1985 02b0 90309FE5 		ldr	r3, .L30
 1986 02b4 8C209FE5 		ldr	r2, .L30
 1987 02b8 001092E5 		ldr	r1, [r2, #0]
 1988 02bc 10201BE5 		ldr	r2, [fp, #-16]
 1989 02c0 012082E2 		add	r2, r2, #1
 1990 02c4 0100A0E3 		mov	r0, #1
 1991 02c8 1022A0E1 		mov	r2, r0, asl r2
 1992 02cc 0220E0E1 		mvn	r2, r2
 1993 02d0 022081E1 		orr	r2, r1, r2
 1994 02d4 002083E5 		str	r2, [r3, #0]
  82:../gpio.c     **** 			break;
 1995              		.loc 1 82 0
 1996 02d8 150000EA 		b	.L29
 1997              	.L27:
  83:../gpio.c     **** 		case EINT:
  84:../gpio.c     **** 			// COMPLETAR: poner en rPCONG 11 a partir de la posición pos para
  85:../gpio.c     **** 			// habilitar la generación de interrupciones externas por el pin
  86:../gpio.c     **** 			// indicado por el parámetro pin
  87:../gpio.c     **** 			//Osu dice: rPCONG 11
  88:../gpio.c     **** 			rPCONG |= ~(0x1 << pos);
 1998              		.loc 1 88 0
 1999 02dc 64309FE5 		ldr	r3, .L30
 2000 02e0 60209FE5 		ldr	r2, .L30
 2001 02e4 001092E5 		ldr	r1, [r2, #0]
 2002 02e8 0100A0E3 		mov	r0, #1
 2003 02ec 10201BE5 		ldr	r2, [fp, #-16]
 2004 02f0 1022A0E1 		mov	r2, r0, asl r2
 2005 02f4 0220E0E1 		mvn	r2, r2
 2006 02f8 022081E1 		orr	r2, r1, r2
 2007 02fc 002083E5 		str	r2, [r3, #0]
  89:../gpio.c     **** 			rPCONG |= ~(0x1 << (pos + 1));
 2008              		.loc 1 89 0
 2009 0300 40309FE5 		ldr	r3, .L30
 2010 0304 3C209FE5 		ldr	r2, .L30
 2011 0308 001092E5 		ldr	r1, [r2, #0]
 2012 030c 10201BE5 		ldr	r2, [fp, #-16]
 2013 0310 012082E2 		add	r2, r2, #1
 2014 0314 0100A0E3 		mov	r0, #1
 2015 0318 1022A0E1 		mov	r2, r0, asl r2
 2016 031c 0220E0E1 		mvn	r2, r2
 2017 0320 022081E1 		orr	r2, r1, r2
 2018 0324 002083E5 		str	r2, [r3, #0]
  90:../gpio.c     **** 			break;
 2019              		.loc 1 90 0
 2020 0328 010000EA 		b	.L29
 2021              	.L23:
  91:../gpio.c     **** 		default:
  92:../gpio.c     **** 			return -1;
 2022              		.loc 1 92 0
 2023 032c 0030E0E3 		mvn	r3, #0
 2024 0330 000000EA 		b	.L22
 2025              	.L29:
  93:../gpio.c     **** 	}
  94:../gpio.c     **** 
  95:../gpio.c     **** 	return 0;
 2026              		.loc 1 95 0
 2027 0334 0030A0E3 		mov	r3, #0
 2028              	.L22:
  96:../gpio.c     **** }
 2029              		.loc 1 96 0
 2030 0338 0300A0E1 		mov	r0, r3
 2031 033c 0CD04BE2 		sub	sp, fp, #12
 2032 0340 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2033 0344 1EFF2FE1 		bx	lr
 2034              	.L31:
 2035              		.align	2
 2036              	.L30:
 2037 0348 4000D201 		.word	30539840
 2038              		.cfi_endproc
 2039              	.LFE2:
 2041              		.align	2
 2042              		.global	portG_eint_trig
 2044              	portG_eint_trig:
 2045              	.LFB3:
  97:../gpio.c     **** 
  98:../gpio.c     **** int portG_eint_trig(int pin, enum trigger trig)
  99:../gpio.c     **** {
 2046              		.loc 1 99 0
 2047              		.cfi_startproc
 2048              		@ Function supports interworking.
 2049              		@ args = 0, pretend = 0, frame = 8
 2050              		@ frame_needed = 1, uses_anonymous_args = 0
 2051 034c 0DC0A0E1 		mov	ip, sp
 2052              	.LCFI6:
 2053              		.cfi_def_cfa_register 12
 2054 0350 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2055 0354 04B04CE2 		sub	fp, ip, #4
 2056              		.cfi_offset 14, -8
 2057              		.cfi_offset 13, -12
 2058              		.cfi_offset 11, -16
 2059              	.LCFI7:
 2060              		.cfi_def_cfa 11, 4
 2061 0358 08D04DE2 		sub	sp, sp, #8
 2062 035c 10000BE5 		str	r0, [fp, #-16]
 2063 0360 0130A0E1 		mov	r3, r1
 2064 0364 11304BE5 		strb	r3, [fp, #-17]
 100:../gpio.c     **** 	// A COMPLETAR EN LA SEGUNDA PARTE DE LA PRÁCTICA
 101:../gpio.c     **** 	return 0;
 2065              		.loc 1 101 0
 2066 0368 0030A0E3 		mov	r3, #0
 102:../gpio.c     **** }
 2067              		.loc 1 102 0
 2068 036c 0300A0E1 		mov	r0, r3
 2069 0370 0CD04BE2 		sub	sp, fp, #12
 2070 0374 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2071 0378 1EFF2FE1 		bx	lr
 2072              		.cfi_endproc
 2073              	.LFE3:
 2075              		.align	2
 2076              		.global	portG_write
 2078              	portG_write:
 2079              	.LFB4:
 103:../gpio.c     **** 
 104:../gpio.c     **** int portG_write(int pin, enum digital val)
 105:../gpio.c     **** {
 2080              		.loc 1 105 0
 2081              		.cfi_startproc
 2082              		@ Function supports interworking.
 2083              		@ args = 0, pretend = 0, frame = 16
 2084              		@ frame_needed = 1, uses_anonymous_args = 0
 2085 037c 0DC0A0E1 		mov	ip, sp
 2086              	.LCFI8:
 2087              		.cfi_def_cfa_register 12
 2088 0380 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2089 0384 04B04CE2 		sub	fp, ip, #4
 2090              		.cfi_offset 14, -8
 2091              		.cfi_offset 13, -12
 2092              		.cfi_offset 11, -16
 2093              	.LCFI9:
 2094              		.cfi_def_cfa 11, 4
 2095 0388 10D04DE2 		sub	sp, sp, #16
 2096 038c 18000BE5 		str	r0, [fp, #-24]
 2097 0390 0130A0E1 		mov	r3, r1
 2098 0394 19304BE5 		strb	r3, [fp, #-25]
 106:../gpio.c     **** 	int pos = pin*2;
 2099              		.loc 1 106 0
 2100 0398 18301BE5 		ldr	r3, [fp, #-24]
 2101 039c 8330A0E1 		mov	r3, r3, asl #1
 2102 03a0 10300BE5 		str	r3, [fp, #-16]
 107:../gpio.c     **** 
 108:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2103              		.loc 1 108 0
 2104 03a4 18301BE5 		ldr	r3, [fp, #-24]
 2105 03a8 000053E3 		cmp	r3, #0
 2106 03ac 020000BA 		blt	.L34
 2107              		.loc 1 108 0 is_stmt 0 discriminator 1
 2108 03b0 18301BE5 		ldr	r3, [fp, #-24]
 2109 03b4 070053E3 		cmp	r3, #7
 2110 03b8 010000DA 		ble	.L35
 2111              	.L34:
 109:../gpio.c     **** 		return -1; // indica error
 2112              		.loc 1 109 0 is_stmt 1
 2113 03bc 0030E0E3 		mvn	r3, #0
 2114 03c0 260000EA 		b	.L36
 2115              	.L35:
 110:../gpio.c     **** 
 111:../gpio.c     **** 	if (val < 0 || val > 1)
 2116              		.loc 1 111 0
 2117 03c4 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2118 03c8 010053E3 		cmp	r3, #1
 2119 03cc 0100009A 		bls	.L37
 112:../gpio.c     **** 		return -1; // indica error
 2120              		.loc 1 112 0
 2121 03d0 0030E0E3 		mvn	r3, #0
 2122 03d4 210000EA 		b	.L36
 2123              	.L37:
 113:../gpio.c     **** 
 114:../gpio.c     **** 	if ((rPCONG & (0x3 << pos)) != (0x1 << pos))
 2124              		.loc 1 114 0
 2125 03d8 90309FE5 		ldr	r3, .L41
 2126 03dc 002093E5 		ldr	r2, [r3, #0]
 2127 03e0 0310A0E3 		mov	r1, #3
 2128 03e4 10301BE5 		ldr	r3, [fp, #-16]
 2129 03e8 1133A0E1 		mov	r3, r1, asl r3
 2130 03ec 032002E0 		and	r2, r2, r3
 2131 03f0 0110A0E3 		mov	r1, #1
 2132 03f4 10301BE5 		ldr	r3, [fp, #-16]
 2133 03f8 1133A0E1 		mov	r3, r1, asl r3
 2134 03fc 030052E1 		cmp	r2, r3
 2135 0400 0100000A 		beq	.L38
 115:../gpio.c     **** 		return -1; // indica error
 2136              		.loc 1 115 0
 2137 0404 0030E0E3 		mvn	r3, #0
 2138 0408 140000EA 		b	.L36
 2139              	.L38:
 116:../gpio.c     **** 
 117:../gpio.c     **** 	if (val){
 2140              		.loc 1 117 0
 2141 040c 19305BE5 		ldrb	r3, [fp, #-25]	@ zero_extendqisi2
 2142 0410 000053E3 		cmp	r3, #0
 2143 0414 0800000A 		beq	.L39
 118:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 1
 119:../gpio.c     **** 		rPDATG |= (0x1 << pin);
 2144              		.loc 1 119 0
 2145 0418 54309FE5 		ldr	r3, .L41+4
 2146 041c 50209FE5 		ldr	r2, .L41+4
 2147 0420 001092E5 		ldr	r1, [r2, #0]
 2148 0424 0100A0E3 		mov	r0, #1
 2149 0428 18201BE5 		ldr	r2, [fp, #-24]
 2150 042c 1022A0E1 		mov	r2, r0, asl r2
 2151 0430 022081E1 		orr	r2, r1, r2
 2152 0434 002083E5 		str	r2, [r3, #0]
 2153 0438 070000EA 		b	.L40
 2154              	.L39:
 120:../gpio.c     **** 	}else{
 121:../gpio.c     **** 		// COMPLETAR: poner en rPDATG el bit indicado por pin a 0
 122:../gpio.c     **** 		rPDATG &= (0x1 << pin);
 2155              		.loc 1 122 0
 2156 043c 30309FE5 		ldr	r3, .L41+4
 2157 0440 2C209FE5 		ldr	r2, .L41+4
 2158 0444 001092E5 		ldr	r1, [r2, #0]
 2159 0448 0100A0E3 		mov	r0, #1
 2160 044c 18201BE5 		ldr	r2, [fp, #-24]
 2161 0450 1022A0E1 		mov	r2, r0, asl r2
 2162 0454 022001E0 		and	r2, r1, r2
 2163 0458 002083E5 		str	r2, [r3, #0]
 2164              	.L40:
 123:../gpio.c     **** 	}
 124:../gpio.c     **** 	return 0;
 2165              		.loc 1 124 0
 2166 045c 0030A0E3 		mov	r3, #0
 2167              	.L36:
 125:../gpio.c     **** }
 2168              		.loc 1 125 0
 2169 0460 0300A0E1 		mov	r0, r3
 2170 0464 0CD04BE2 		sub	sp, fp, #12
 2171 0468 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2172 046c 1EFF2FE1 		bx	lr
 2173              	.L42:
 2174              		.align	2
 2175              	.L41:
 2176 0470 4000D201 		.word	30539840
 2177 0474 4400D201 		.word	30539844
 2178              		.cfi_endproc
 2179              	.LFE4:
 2181              		.align	2
 2182              		.global	portG_read
 2184              	portG_read:
 2185              	.LFB5:
 126:../gpio.c     **** 
 127:../gpio.c     **** int portG_read(int pin, enum digital* val)
 128:../gpio.c     **** {
 2186              		.loc 1 128 0
 2187              		.cfi_startproc
 2188              		@ Function supports interworking.
 2189              		@ args = 0, pretend = 0, frame = 16
 2190              		@ frame_needed = 1, uses_anonymous_args = 0
 2191 0478 0DC0A0E1 		mov	ip, sp
 2192              	.LCFI10:
 2193              		.cfi_def_cfa_register 12
 2194 047c 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2195 0480 04B04CE2 		sub	fp, ip, #4
 2196              		.cfi_offset 14, -8
 2197              		.cfi_offset 13, -12
 2198              		.cfi_offset 11, -16
 2199              	.LCFI11:
 2200              		.cfi_def_cfa 11, 4
 2201 0484 10D04DE2 		sub	sp, sp, #16
 2202 0488 18000BE5 		str	r0, [fp, #-24]
 2203 048c 1C100BE5 		str	r1, [fp, #-28]
 129:../gpio.c     **** 	int pos = pin*2;
 2204              		.loc 1 129 0
 2205 0490 18301BE5 		ldr	r3, [fp, #-24]
 2206 0494 8330A0E1 		mov	r3, r3, asl #1
 2207 0498 10300BE5 		str	r3, [fp, #-16]
 130:../gpio.c     **** 
 131:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2208              		.loc 1 131 0
 2209 049c 18301BE5 		ldr	r3, [fp, #-24]
 2210 04a0 000053E3 		cmp	r3, #0
 2211 04a4 020000BA 		blt	.L44
 2212              		.loc 1 131 0 is_stmt 0 discriminator 1
 2213 04a8 18301BE5 		ldr	r3, [fp, #-24]
 2214 04ac 070053E3 		cmp	r3, #7
 2215 04b0 010000DA 		ble	.L45
 2216              	.L44:
 132:../gpio.c     **** 		return -1; // indica error
 2217              		.loc 1 132 0 is_stmt 1
 2218 04b4 0030E0E3 		mvn	r3, #0
 2219 04b8 190000EA 		b	.L46
 2220              	.L45:
 133:../gpio.c     **** 
 134:../gpio.c     **** 	if (rPCONG & (0x3 << pos))
 2221              		.loc 1 134 0
 2222 04bc 70309FE5 		ldr	r3, .L50
 2223 04c0 002093E5 		ldr	r2, [r3, #0]
 2224 04c4 0310A0E3 		mov	r1, #3
 2225 04c8 10301BE5 		ldr	r3, [fp, #-16]
 2226 04cc 1133A0E1 		mov	r3, r1, asl r3
 2227 04d0 033002E0 		and	r3, r2, r3
 2228 04d4 000053E3 		cmp	r3, #0
 2229 04d8 0100000A 		beq	.L47
 135:../gpio.c     **** 		return -1; // indica error
 2230              		.loc 1 135 0
 2231 04dc 0030E0E3 		mvn	r3, #0
 2232 04e0 0F0000EA 		b	.L46
 2233              	.L47:
 136:../gpio.c     **** 	/*COMPLETAR: true si está a 1 en rPDATG el pin indicado por el parámetro pin*/
 137:../gpio.c     **** 
 138:../gpio.c     **** 	if(rPDATG & (0x1 << pos)){
 2234              		.loc 1 138 0
 2235 04e4 4C309FE5 		ldr	r3, .L50+4
 2236 04e8 002093E5 		ldr	r2, [r3, #0]
 2237 04ec 0110A0E3 		mov	r1, #1
 2238 04f0 10301BE5 		ldr	r3, [fp, #-16]
 2239 04f4 1133A0E1 		mov	r3, r1, asl r3
 2240 04f8 033002E0 		and	r3, r2, r3
 2241 04fc 000053E3 		cmp	r3, #0
 2242 0500 0300000A 		beq	.L48
 139:../gpio.c     **** 		*val = HIGH;
 2243              		.loc 1 139 0
 2244 0504 1C301BE5 		ldr	r3, [fp, #-28]
 2245 0508 0120A0E3 		mov	r2, #1
 2246 050c 0020C3E5 		strb	r2, [r3, #0]
 2247 0510 020000EA 		b	.L49
 2248              	.L48:
 140:../gpio.c     **** 	}else{
 141:../gpio.c     **** 		*val = LOW;
 2249              		.loc 1 141 0
 2250 0514 1C301BE5 		ldr	r3, [fp, #-28]
 2251 0518 0020A0E3 		mov	r2, #0
 2252 051c 0020C3E5 		strb	r2, [r3, #0]
 2253              	.L49:
 142:../gpio.c     **** 	}
 143:../gpio.c     **** 	return 0;
 2254              		.loc 1 143 0
 2255 0520 0030A0E3 		mov	r3, #0
 2256              	.L46:
 144:../gpio.c     **** }
 2257              		.loc 1 144 0
 2258 0524 0300A0E1 		mov	r0, r3
 2259 0528 0CD04BE2 		sub	sp, fp, #12
 2260 052c 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2261 0530 1EFF2FE1 		bx	lr
 2262              	.L51:
 2263              		.align	2
 2264              	.L50:
 2265 0534 4000D201 		.word	30539840
 2266 0538 4400D201 		.word	30539844
 2267              		.cfi_endproc
 2268              	.LFE5:
 2270              		.align	2
 2271              		.global	portG_conf_pup
 2273              	portG_conf_pup:
 2274              	.LFB6:
 145:../gpio.c     **** 
 146:../gpio.c     **** int portG_conf_pup(int pin, enum enable st)
 147:../gpio.c     **** {
 2275              		.loc 1 147 0
 2276              		.cfi_startproc
 2277              		@ Function supports interworking.
 2278              		@ args = 0, pretend = 0, frame = 8
 2279              		@ frame_needed = 1, uses_anonymous_args = 0
 2280 053c 0DC0A0E1 		mov	ip, sp
 2281              	.LCFI12:
 2282              		.cfi_def_cfa_register 12
 2283 0540 00D82DE9 		stmfd	sp!, {fp, ip, lr, pc}
 2284 0544 04B04CE2 		sub	fp, ip, #4
 2285              		.cfi_offset 14, -8
 2286              		.cfi_offset 13, -12
 2287              		.cfi_offset 11, -16
 2288              	.LCFI13:
 2289              		.cfi_def_cfa 11, 4
 2290 0548 08D04DE2 		sub	sp, sp, #8
 2291 054c 10000BE5 		str	r0, [fp, #-16]
 2292 0550 0130A0E1 		mov	r3, r1
 2293 0554 11304BE5 		strb	r3, [fp, #-17]
 148:../gpio.c     **** 	if (pin < 0 || pin > 7)
 2294              		.loc 1 148 0
 2295 0558 10301BE5 		ldr	r3, [fp, #-16]
 2296 055c 000053E3 		cmp	r3, #0
 2297 0560 020000BA 		blt	.L53
 2298              		.loc 1 148 0 is_stmt 0 discriminator 1
 2299 0564 10301BE5 		ldr	r3, [fp, #-16]
 2300 0568 070053E3 		cmp	r3, #7
 2301 056c 010000DA 		ble	.L54
 2302              	.L53:
 149:../gpio.c     **** 		return -1; // indica error
 2303              		.loc 1 149 0 is_stmt 1
 2304 0570 0030E0E3 		mvn	r3, #0
 2305 0574 1D0000EA 		b	.L55
 2306              	.L54:
 150:../gpio.c     **** 
 151:../gpio.c     **** 	if (st != ENABLE && st != DISABLE)
 2307              		.loc 1 151 0
 2308 0578 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2309 057c 010053E3 		cmp	r3, #1
 2310 0580 0400000A 		beq	.L56
 2311              		.loc 1 151 0 is_stmt 0 discriminator 1
 2312 0584 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2313 0588 000053E3 		cmp	r3, #0
 2314 058c 0100000A 		beq	.L56
 152:../gpio.c     **** 		return -1; // indica error
 2315              		.loc 1 152 0 is_stmt 1
 2316 0590 0030E0E3 		mvn	r3, #0
 2317 0594 150000EA 		b	.L55
 2318              	.L56:
 153:../gpio.c     **** 	if(st == ENABLE){
 2319              		.loc 1 153 0
 2320 0598 11305BE5 		ldrb	r3, [fp, #-17]	@ zero_extendqisi2
 2321 059c 010053E3 		cmp	r3, #1
 2322 05a0 0900001A 		bne	.L57
 154:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 155:../gpio.c     **** 		// para activar la resistencia de pull-up
 156:../gpio.c     **** 		rPUPG &= ~(0x1 << pin);
 2323              		.loc 1 156 0
 2324 05a4 54309FE5 		ldr	r3, .L59
 2325 05a8 50209FE5 		ldr	r2, .L59
 2326 05ac 001092E5 		ldr	r1, [r2, #0]
 2327 05b0 0100A0E3 		mov	r0, #1
 2328 05b4 10201BE5 		ldr	r2, [fp, #-16]
 2329 05b8 1022A0E1 		mov	r2, r0, asl r2
 2330 05bc 0220E0E1 		mvn	r2, r2
 2331 05c0 022001E0 		and	r2, r1, r2
 2332 05c4 002083E5 		str	r2, [r3, #0]
 2333 05c8 070000EA 		b	.L58
 2334              	.L57:
 157:../gpio.c     **** 	}else{
 158:../gpio.c     **** 		// COMPLETAR: poner el pin de rPUPG indicado por el parametro pin al valor adecuado,
 159:../gpio.c     **** 		// para desactivar la resistencia de pull-up
 160:../gpio.c     **** 		rPUPG |= (0x1 << pin);
 2335              		.loc 1 160 0
 2336 05cc 2C309FE5 		ldr	r3, .L59
 2337 05d0 28209FE5 		ldr	r2, .L59
 2338 05d4 001092E5 		ldr	r1, [r2, #0]
 2339 05d8 0100A0E3 		mov	r0, #1
 2340 05dc 10201BE5 		ldr	r2, [fp, #-16]
 2341 05e0 1022A0E1 		mov	r2, r0, asl r2
 2342 05e4 022081E1 		orr	r2, r1, r2
 2343 05e8 002083E5 		str	r2, [r3, #0]
 2344              	.L58:
 161:../gpio.c     **** 	}
 162:../gpio.c     **** 	return 0;
 2345              		.loc 1 162 0
 2346 05ec 0030A0E3 		mov	r3, #0
 2347              	.L55:
 163:../gpio.c     **** 
 164:../gpio.c     **** }
 2348              		.loc 1 164 0
 2349 05f0 0300A0E1 		mov	r0, r3
 2350 05f4 0CD04BE2 		sub	sp, fp, #12
 2351 05f8 00689DE8 		ldmfd	sp, {fp, sp, lr}
 2352 05fc 1EFF2FE1 		bx	lr
 2353              	.L60:
 2354              		.align	2
 2355              	.L59:
 2356 0600 4800D201 		.word	30539848
 2357              		.cfi_endproc
 2358              	.LFE6:
 2360              	.Letext0:
DEFINED SYMBOLS
                            *ABS*:00000000 gpio.c
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1698   .text:00000000 $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1701   .text:00000000 portB_conf
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1784   .text:000000c4 $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1788   .text:000000c8 $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1791   .text:000000c8 portB_write
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1870   .text:00000180 $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1874   .text:00000184 $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1877   .text:00000184 portG_conf
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1921   .text:000001dc $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:1927   .text:000001ec $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2037   .text:00000348 $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2041   .text:0000034c $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2044   .text:0000034c portG_eint_trig
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2078   .text:0000037c portG_write
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2176   .text:00000470 $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2181   .text:00000478 $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2184   .text:00000478 portG_read
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2265   .text:00000534 $d
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2270   .text:0000053c $a
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2273   .text:0000053c portG_conf_pup
C:\Users\Osurac\AppData\Local\Temp\cc6IUcWY.s:2356   .text:00000600 $d
                     .debug_frame:00000010 $d

NO UNDEFINED SYMBOLS
